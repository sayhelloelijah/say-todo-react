{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","open","openState","className","method","htmlFor","type","id","value","inputText","onChange","e","setInputText","target","placeholder","onClick","preventDefault","setTodos","todos","text","completed","Math","floor","random","setOpenState","title","Todo","todo","map","item","filter","el","version","x","y","viewBox","style","enableBackground","d","TodoList","filteredTodos","App","useState","status","setStatus","setFilteredTodos","dte","Date","time","date","getDate","day","getDay","month","getMonth","year","getFullYear","useEffect","localStorage","getItem","setItem","JSON","stringify","todoLocal","parse","getLocalTodos","filterHandler","tabIndex","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46e1fe8a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Form = (props) => {\r\n    const inputTextHandler = (e) => {\r\n        props.setInputText(e.target.value);\r\n    };\r\n\r\n    const submitTodoHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        props.setTodos([...props.todos, {\r\n            text: props.inputText,\r\n            completed: false,\r\n            id: Math.floor(Math.random() * 1000)\r\n        }]);\r\n\r\n        props.setInputText(\"\");\r\n        props.setOpenState(false);\r\n    }\r\n    \r\n    const statusHandler = (e) => {\r\n        props.setStatus(e.target.value)\r\n    }\r\n\r\n    const openStateHandler = () => {\r\n        props.setOpenState(!props.openState);\r\n    }\r\n\r\n    return (\r\n        // <form>\r\n        //     <input value={props.inputText} type=\"text\" className=\"todo-input\" onChange={inputTextHandler} />\r\n        //     <button className=\"todo-button\" type=\"submit\" onClick={submitTodoHandler} >\r\n        //         <i className=\"fas fa-plus-square\"></i>\r\n        //     </button>\r\n        //     <div className=\"select\">\r\n        //         <select name=\"todos\" className=\"filter-todo\" onChange={statusHandler}>\r\n        //             <option value=\"all\">All</option>\r\n        //             <option value=\"completed\">Completed</option>\r\n        //             <option value=\"uncompleted\">Uncompleted</option>\r\n        //         </select>\r\n        //     </div>\r\n        // </form>\r\n        \r\n        <dialog open={props.openState} className=\"todo__dialog\">\r\n            <form className=\"todo__dialog-form\" method=\"dialog\">\r\n                <label className=\"todo__dialog-label\" htmlFor=\"todo__question\">Add a Task</label>\r\n                <input type=\"text\" className=\"todo__dialog-input\" id=\"todo__question\" value={props.inputText} onChange={inputTextHandler} placeholder=\"What's Going On?\" />\r\n                <menu className=\"todo__dialog-menu\">\r\n                    <button className=\"todo__dialog-confirm\" value=\"default\" onClick={submitTodoHandler}>Submit</button>\r\n                </menu>\r\n            </form>\r\n            <button className=\"todo__dialog-close\" title=\"Close Modal\" onClick={openStateHandler}>&times;</button>\r\n        </dialog>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react';\r\n\r\nconst Todo = (props) => {\r\n    function removeLocalTodos(todo) {\r\n        let todos;\r\n        if (localStorage.getItem(\"todos\") === null) {\r\n            todos = [];\r\n        } else {\r\n            todos = JSON.parse(localStorage.getItem(\"todos\"));\r\n        }\r\n        const todoIndex = todo.children[0].innerText;\r\n        todos.splice(todos.indexOf(todoIndex), 1);\r\n        localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n    }\r\n\r\n    const deleteHandler = (e) => {\r\n        props.setTodos(props.todos.filter((el) => el.id !== props.todo.id));\r\n    };\r\n\r\n    const completeHandler = () => {\r\n        props.setTodos(props.todos.map(item => {\r\n            if(item.id === props.todo.id) {\r\n                return {...item, completed: !item.completed}\r\n            }\r\n\r\n            return item;\r\n        }));\r\n    };\r\n\r\n    return(\r\n    //     <li className={`todo-item ${props.todo.completed ? 'completed' : ''}`}>{props.text}\r\n    //     <button onClick={completeHandler} className=\"complete-btn\">\r\n    //         <i className=\"fas fa-check\"></i>\r\n    //     </button>\r\n    //     <button onClick={deleteHandler} className=\"trash-btn\">\r\n    //         <i className=\"fas fa-trash\"></i>\r\n    //     </button>\r\n    // </li>\r\n\r\n<li className={`todo__list-item ${props.todo.completed ? \"todo__list-item--done\" : \"\"}`} onClick={completeHandler} >\r\n{props.text}\r\n<svg className=\"todo__list-item-svg\" onClick={deleteHandler} version=\"1.1\" id=\"Capa_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 59 59\" style={{enableBackground: \"new 0 0 59 59\"}}>\r\n  <g><path d=\"M29.5,51c0.552,0,1-0.447,1-1V17c0-0.553-0.448-1-1-1s-1,0.447-1,1v33C28.5,50.553,28.948,51,29.5,51z\"/>\r\n  <path d=\"M19.5,51c0.552,0,1-0.447,1-1V17c0-0.553-0.448-1-1-1s-1,0.447-1,1v33C18.5,50.553,18.948,51,19.5,51z\"/>\r\n  <path d=\"M39.5,51c0.552,0,1-0.447,1-1V17c0-0.553-0.448-1-1-1s-1,0.447-1,1v33C38.5,50.553,38.948,51,39.5,51z\"/>\r\n  <path d=\"M52.5,6H38.456c-0.11-1.25-0.495-3.358-1.813-4.711C35.809,0.434,34.751,0,33.499,0H23.5c-1.252,0-2.31,0.434-3.144,1.289 C19.038,2.642,18.653,4.75,18.543,6H6.5c-0.552,0-1,0.447-1,1s0.448,1,1,1h2.041l1.915,46.021C10.493,55.743,11.565,59,15.364,59 h28.272c3.799,0,4.871-3.257,4.907-4.958L50.459,8H52.5c0.552,0,1-0.447,1-1S53.052,6,52.5,6z M21.792,2.681 C22.24,2.223,22.799,2,23.5,2h9.999c0.701,0,1.26,0.223,1.708,0.681c0.805,0.823,1.128,2.271,1.24,3.319H20.553 C20.665,4.952,20.988,3.504,21.792,2.681z M46.544,53.979C46.538,54.288,46.4,57,43.636,57H15.364 c-2.734,0-2.898-2.717-2.909-3.042L10.542,8h37.915L46.544,53.979z\"/>\r\n  </g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g>\r\n</svg>\r\n</li>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React from 'react'\r\nimport Todo from './Todo';\r\n\r\nconst TodoList = (props) => {\r\n\r\n    return (\r\n        <ul className=\"todo__list\">\r\n            {props.filteredTodos.map(todo => (\r\n                <Todo setTodos={props.setTodos} todos={props.todos} todo={todo} text={todo.text} key={todo.id}/>\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default TodoList;","import { useState, useEffect } from 'react';\r\nimport './sass/app.scss';\r\nimport Form from \"./components/Form\";\r\nimport TodoList from './components/TodoList';\r\n\r\nfunction App() {\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [todos, setTodos] = useState([]);\r\n  const [status, setStatus] = useState('uncompleted');\r\n  const [filteredTodos, setFilteredTodos] = useState([]);\r\n  const [openState, setOpenState] = useState(\"\");\r\n  const dte = new Date();\r\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n  const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n  const time = {\r\n    date: dte.getDate(),\r\n    day: days[dte.getDay()],\r\n    month: months[dte.getMonth()],\r\n    year: dte.getFullYear()\r\n  };\r\n\r\n  const openStateHandler = () => {\r\n      setOpenState(!openState);\r\n  }\r\n\r\n  const filterHandler = () => {\r\n    switch(status) {\r\n      case 'completed':\r\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\r\n        break;\r\n      case 'uncompleted':\r\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\r\n        break;\r\n      default:\r\n        setFilteredTodos(todos);\r\n    }\r\n  }\r\n\r\n  const saveLocalTodos = () => {\r\n      localStorage.setItem('todos', JSON.stringify(todos));\r\n  }\r\n\r\n  const getLocalTodos = () => {\r\n    if(localStorage.getItem('todos') === null) {\r\n      localStorage.setItem('todos', JSON.stringify([]));\r\n    } else {\r\n      let todoLocal = JSON.parse(localStorage.getItem('todos'));\r\n      setTodos(todoLocal);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getLocalTodos();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    filterHandler();\r\n    saveLocalTodos();\r\n  }, [todos, status]);\r\n\r\n  return (\r\n    <div className=\"todo todo--react\">\r\n      <header className=\"todo__header\">\r\n        <h1 className=\"todo__heading\">say-todo-react</h1>\r\n        <section className=\"todo__date\">\r\n            <div className=\"todo__date-mdy\">\r\n              <span className=\"todo__date-date\">{time.date}</span>\r\n              <div className=\"todo__date-my\">\r\n                  <span className=\"todo__date-month\">{time.month}</span>\r\n                  <span className=\"todo__date-year\">{time.year}</span>\r\n              </div>\r\n          </div>\r\n          <span className=\"todo__date-day\">{time.day}</span>\r\n        </section>\r\n      </header>\r\n      <button type=\"button\" className=\"todo__add-task\" tabIndex=\"1\" title=\"Add New Task\" onClick={openStateHandler}>\r\n        <svg className=\"todo__add-task-svg\" version=\"1.1\" id=\"Capa_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 52 52\" style={{enableBackground:\"new 0 0 52 52\"}}>\r\n          <path d=\"M26,0C11.664,0,0,11.663,0,26s11.664,26,26,26s26-11.663,26-26S40.336,0,26,0z M38.5,28H28v11c0,1.104-0.896,2-2,2 s-2-0.896-2-2V28H13.5c-1.104,0-2-0.896-2-2s0.896-2,2-2H24V14c0-1.104,0.896-2,2-2s2,0.896,2,2v10h10.5c1.104,0,2,0.896,2,2 S39.604,28,38.5,28z\"/><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g>\r\n        </svg>\r\n      </button>\r\n      <Form openState={openState} setOpenState={setOpenState} inputText={inputText} todos={todos} setTodos={setTodos} setInputText={setInputText} setStatus={setStatus} />\r\n      <TodoList todos={todos} setTodos={setTodos}  filteredTodos={filteredTodos} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}